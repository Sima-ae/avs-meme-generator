{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/pro/Desktop/REPOS%20CURSOR/avs-meme-generator/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/pro/Desktop/REPOS%20CURSOR/avs-meme-generator/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/pro/Desktop/REPOS%20CURSOR/avs-meme-generator/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/pro/Desktop/REPOS%20CURSOR/avs-meme-generator/src/app/prikbord/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Upload, X, Maximize2, Minimize2, Plus, LogIn } from 'lucide-react';\nimport { sql } from '@vercel/postgres';\n\ninterface StickyNote {\n  id: number;\n  x: number;\n  y: number;\n  imageUrl: string;\n  title?: string;\n  userId: number;\n}\n\nexport default function PrikbordPage() {\n  const { data: session, status } = useSession();\n  const router = useRouter();\n  const [stickyNotes, setStickyNotes] = useState<StickyNote[]>([]);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [uploadUrl, setUploadUrl] = useState('');\n  const [isDragging, setIsDragging] = useState<number | null>(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const whiteboardRef = useRef<HTMLDivElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Load memes from database\n  useEffect(() => {\n    if (status === 'loading') return;\n    \n    loadMemesFromDatabase();\n  }, [status]);\n\n  const loadMemesFromDatabase = async () => {\n    try {\n      const { rows } = await sql`\n        SELECT id, image_url, title, position_x, position_y, user_id\n        FROM prikbord_memes \n        WHERE is_active = true\n        ORDER BY created_at DESC\n      `;\n      \n      const memes = rows.map(row => ({\n        id: row.id,\n        x: row.position_x,\n        y: row.position_y,\n        imageUrl: row.image_url,\n        title: row.title,\n        userId: row.user_id\n      }));\n      \n      setStickyNotes(memes);\n    } catch (error) {\n      console.error('Error loading memes:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n      setIsFullscreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullscreen(false);\n    }\n  };\n\n  const addStickyNote = async (imageUrl: string, title?: string) => {\n    if (!session?.user?.id) {\n      router.push('/auth/signin');\n      return;\n    }\n\n    try {\n      const x = Math.random() * 300 + 50;\n      const y = Math.random() * 200 + 50;\n      \n      const { rows } = await sql`\n        INSERT INTO prikbord_memes (user_id, image_url, title, position_x, position_y)\n        VALUES (${parseInt(session.user.id)}, ${imageUrl}, ${title || 'Meme Kaart'}, ${x}, ${y})\n        RETURNING id, image_url, title, position_x, position_y, user_id\n      `;\n      \n      const newNote: StickyNote = {\n        id: rows[0].id,\n        x: rows[0].position_x,\n        y: rows[0].position_y,\n        imageUrl: rows[0].image_url,\n        title: rows[0].title,\n        userId: rows[0].user_id\n      };\n      \n      setStickyNotes(prev => [...prev, newNote]);\n    } catch (error) {\n      console.error('Error adding meme:', error);\n    }\n  };\n\n  const handleUrlUpload = () => {\n    if (uploadUrl.trim()) {\n      addStickyNote(uploadUrl.trim());\n      setUploadUrl('');\n    }\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const imageUrl = e.target?.result as string;\n        addStickyNote(imageUrl, file.name);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const removeStickyNote = async (id: number) => {\n    if (!session?.user?.id || session.user.role !== 'admin') return;\n    \n    try {\n      await sql`DELETE FROM prikbord_memes WHERE id = ${id}`;\n      setStickyNotes(prev => prev.filter(note => note.id !== id));\n    } catch (error) {\n      console.error('Error removing meme:', error);\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent, id: number) => {\n    // Only allow dragging for admin users\n    if (!session?.user?.id || session.user.role !== 'admin') return;\n    \n    e.preventDefault();\n    setIsDragging(id);\n    const rect = whiteboardRef.current?.getBoundingClientRect();\n    if (rect) {\n      const note = stickyNotes.find(n => n.id === id);\n      if (note) {\n        setDragOffset({\n          x: e.clientX - rect.left - note.x,\n          y: e.clientY - rect.top - note.y\n        });\n      }\n    }\n  };\n\n  const handleMouseMove = async (e: React.MouseEvent) => {\n    if (isDragging && whiteboardRef.current) {\n      const rect = whiteboardRef.current.getBoundingClientRect();\n      const newX = e.clientX - rect.left - dragOffset.x;\n      const newY = e.clientY - rect.top - dragOffset.y;\n      \n      const constrainedX = Math.max(0, Math.min(newX, rect.width - 200));\n      const constrainedY = Math.max(0, Math.min(newY, rect.height - 200));\n      \n      setStickyNotes(prev => prev.map(note => \n        note.id === isDragging \n          ? { ...note, x: constrainedX, y: constrainedY }\n          : note\n      ));\n    }\n  };\n\n  const handleMouseUp = async () => {\n    if (isDragging && session?.user?.id && session.user.role === 'admin') {\n      // Save position to database\n      try {\n        const note = stickyNotes.find(n => n.id === isDragging);\n        if (note) {\n          await sql`\n            UPDATE prikbord_memes \n            SET position_x = ${note.x}, position_y = ${note.y}\n            WHERE id = ${isDragging}\n          `;\n        }\n      } catch (error) {\n        console.error('Error updating position:', error);\n      }\n    }\n    setIsDragging(null);\n  };\n\n  const handleImageClick = (imageUrl: string) => {\n    setSelectedImage(imageUrl);\n  };\n\n  const closeImagePopup = () => {\n    setSelectedImage(null);\n  };\n\n  if (status === 'loading' || isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-lg\">Laden...</div>\n      </div>\n    );\n  }\n\n\n  return (\n    <div className={`min-h-screen bg-gray-100 transition-all duration-300 ${isFullscreen ? 'fixed inset-0 z-50' : ''}`}>\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b p-4\">\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\n          <h1 className=\"text-2xl font-bold text-gray-800\">Prikbord - Memes</h1>\n          <div className=\"flex items-center gap-4\">\n            {session?.user?.role === 'admin' && (\n              <Button\n                onClick={() => router.push('/admin')}\n                variant=\"outline\"\n                size=\"sm\"\n              >\n                Admin Dashboard\n              </Button>\n            )}\n            {session && (\n              <>\n                <div className=\"flex items-center gap-2\">\n                  <Input\n                    placeholder=\"Voer afbeelding URL in...\"\n                    value={uploadUrl}\n                    onChange={(e) => setUploadUrl(e.target.value)}\n                    className=\"w-64\"\n                    onKeyPress={(e) => e.key === 'Enter' && handleUrlUpload()}\n                  />\n                  <Button onClick={handleUrlUpload} size=\"sm\">\n                    <Plus className=\"w-4 h-4 mr-1\" />\n                    URL Toevoegen\n                  </Button>\n                </div>\n                <Button\n                  onClick={() => fileInputRef.current?.click()}\n                  variant=\"outline\"\n                  size=\"sm\"\n                >\n                  <Upload className=\"w-4 h-4 mr-1\" />\n                  PNG Uploaden\n                </Button>\n              </>\n            )}\n            <Button\n              onClick={toggleFullscreen}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              {isFullscreen ? <Minimize2 className=\"w-4 h-4\" /> : <Maximize2 className=\"w-4 h-4\" />}\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Whiteboard */}\n      <div\n        ref={whiteboardRef}\n        className=\"relative w-full h-[calc(100vh-80px)] bg-white overflow-hidden\"\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n      >\n        {/* Grid pattern */}\n        <div className=\"absolute inset-0 opacity-5\">\n          <div className=\"w-full h-full\" style={{\n            backgroundImage: `\n              linear-gradient(rgba(0,0,0,0.1) 1px, transparent 1px),\n              linear-gradient(90deg, rgba(0,0,0,0.1) 1px, transparent 1px)\n            `,\n            backgroundSize: '20px 20px'\n          }} />\n        </div>\n\n        {/* Meme Images */}\n        {stickyNotes.map((note) => (\n          <div\n            key={note.id}\n            className={`absolute select-none ${\n              session?.user?.role === 'admin' ? 'cursor-move' : 'cursor-pointer'\n            }`}\n            style={{\n              left: note.x,\n              top: note.y,\n              transform: isDragging === note.id ? 'rotate(2deg)' : 'rotate(-1deg)',\n              transition: isDragging === note.id ? 'none' : 'transform 0.2s ease'\n            }}\n            onMouseDown={(e) => handleMouseDown(e, note.id)}\n          >\n            <div className=\"relative w-48 h-48\">\n              <img\n                src={note.imageUrl}\n                alt={note.title}\n                className=\"w-full h-full object-contain hover:opacity-90 transition-opacity duration-200\"\n                draggable={false}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleImageClick(note.imageUrl);\n                }}\n              />\n              {session?.user?.role === 'admin' && (\n                <Button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    removeStickyNote(note.id);\n                  }}\n                  size=\"sm\"\n                  variant=\"destructive\"\n                  className=\"absolute -top-2 -right-2 w-6 h-6 p-0 rounded-full shadow-lg\"\n                >\n                  <X className=\"w-3 h-3\" />\n                </Button>\n              )}\n            </div>\n          </div>\n        ))}\n\n        {/* Empty state */}\n        {stickyNotes.length === 0 && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center text-gray-500\">\n              <div className=\"text-6xl mb-4\">📌</div>\n              <h3 className=\"text-xl font-semibold mb-2\">Nog geen memes geplaatst</h3>\n              <p className=\"text-sm\">\n                {session \n                  ? 'Upload jouw gegeneerde meme om te beginnen!' \n                  : 'Log in om memes toe te voegen aan het prikbord!'\n                }\n              </p>\n              {!session && (\n                <div className=\"mt-4\">\n                  <Button\n                    onClick={() => router.push('/auth/signin')}\n                    size=\"sm\"\n                    style={{ backgroundColor: '#30302e' }}\n                  >\n                    <LogIn className=\"w-4 h-4 mr-2\" />\n                    Inloggen\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/png,image/jpeg,image/jpg\"\n        onChange={handleFileUpload}\n        className=\"hidden\"\n      />\n\n      {/* Full-size Image Popup */}\n      {selectedImage && (\n        <div \n          className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/80 backdrop-blur-sm\"\n          onClick={closeImagePopup}\n        >\n          <div \n            className=\"relative max-w-4xl max-h-full\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <img\n              src={selectedImage}\n              alt=\"Full size meme\"\n              className=\"max-w-full max-h-full object-contain\"\n            />\n            <Button\n              onClick={closeImagePopup}\n              size=\"sm\"\n              variant=\"destructive\"\n              className=\"absolute -top-2 -right-2 w-8 h-8 p-0 rounded-full shadow-lg\"\n            >\n              <X className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}