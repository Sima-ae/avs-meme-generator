{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/pro/Desktop/REPOS%20CURSOR/avs-meme-generator/src/app/simple-test/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\nexport default function SimpleTestPage() {\n  const [memes, setMemes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    console.log('Simple test page loading...');\n    loadMemes();\n  }, []);\n\n  const loadMemes = async () => {\n    try {\n      console.log('Fetching memes...');\n      const response = await fetch('/api/prikbord');\n      const result = await response.json();\n      \n      console.log('API response:', result);\n      \n      if (result.success) {\n        setMemes(result.data);\n      } else {\n        setError('API error: ' + result.error);\n      }\n    } catch (error) {\n      console.error('Error loading memes:', error);\n      setError('Network error: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-lg\">Simple Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <h1 className=\"text-2xl font-bold mb-4\">Simple Test Page</h1>\n      <p>Memes count: {memes.length}</p>\n      {error && <p className=\"text-red-500\">Error: {error}</p>}\n      \n      <div className=\"mt-4\">\n        {memes.map((meme: any) => (\n          <div key={meme.id} className=\"bg-white p-4 rounded shadow mb-2\">\n            <p>ID: {meme.id}</p>\n            <p>Title: {meme.title}</p>\n            <p>Image: {meme.image_url}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IAEnC,IAAA,kNAAS,EAAC;QACR,QAAQ,GAAG,CAAC;QACZ;IACF,GAAG,EAAE;IAEL,MAAM,YAAY;QAChB,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,SAAS,MAAM,SAAS,IAAI;YAElC,QAAQ,GAAG,CAAC,iBAAiB;YAE7B,IAAI,OAAO,OAAO,EAAE;gBAClB,SAAS,OAAO,IAAI;YACtB,OAAO;gBACL,SAAS,gBAAgB,OAAO,KAAK;YACvC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,SAAS,oBAAoB,MAAM,OAAO;QAC5C,SAAU;YACR,aAAa;QACf;IACF;IAEA,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAU;;;;;;;;;;;IAG/B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;;oBAAE;oBAAc,MAAM,MAAM;;;;;;;YAC5B,uBAAS,8OAAC;gBAAE,WAAU;;oBAAe;oBAAQ;;;;;;;0BAE9C,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAAkB,WAAU;;0CAC3B,8OAAC;;oCAAE;oCAAK,KAAK,EAAE;;;;;;;0CACf,8OAAC;;oCAAE;oCAAQ,KAAK,KAAK;;;;;;;0CACrB,8OAAC;;oCAAE;oCAAQ,KAAK,SAAS;;;;;;;;uBAHjB,KAAK,EAAE;;;;;;;;;;;;;;;;AAS3B","debugId":null}}]
}