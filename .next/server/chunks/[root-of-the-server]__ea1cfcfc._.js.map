{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/pro/Desktop/REPOS%20CURSOR/avs-meme-generator/src/app/api/prikbord/route.ts"],"sourcesContent":["import { sql } from '@vercel/postgres';\nimport { NextResponse } from 'next/server';\n\nexport async function GET() {\n  try {\n    const { rows } = await sql`\n      SELECT id, image_url, title, position_x, position_y, user_id\n      FROM prikbord_memes \n      WHERE is_active = true\n      ORDER BY created_at DESC\n    `;\n    \n    return NextResponse.json({ success: true, data: rows });\n  } catch (error) {\n    console.error('Error fetching memes:', error);\n    return NextResponse.json({ success: false, error: error.message }, { status: 500 });\n  }\n}\n\nexport async function POST(request: Request) {\n  try {\n    const { imageUrl, title, userId, x, y } = await request.json();\n    \n    const positionX = x || Math.round(Math.random() * 300 + 50);\n    const positionY = y || Math.round(Math.random() * 200 + 50);\n    \n    const { rows } = await sql`\n      INSERT INTO prikbord_memes (user_id, image_url, title, position_x, position_y)\n      VALUES (${userId}, ${imageUrl}, ${title || 'Meme Kaart'}, ${positionX}, ${positionY})\n      RETURNING id, image_url, title, position_x, position_y, user_id\n    `;\n    \n    return NextResponse.json({ success: true, data: rows[0] });\n  } catch (error) {\n    console.error('Error adding meme:', error);\n    return NextResponse.json({ success: false, error: error.message }, { status: 500 });\n  }\n}\n\nexport async function DELETE(request: Request) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const id = searchParams.get('id');\n    \n    if (!id) {\n      return NextResponse.json({ success: false, error: 'ID is required' }, { status: 400 });\n    }\n    \n    await sql`DELETE FROM prikbord_memes WHERE id = ${parseInt(id)}`;\n    \n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error deleting meme:', error);\n    return NextResponse.json({ success: false, error: error.message }, { status: 500 });\n  }\n}\n\nexport async function PUT(request: Request) {\n  try {\n    const { id, x, y } = await request.json();\n    \n    await sql`\n      UPDATE prikbord_memes \n      SET position_x = ${x}, position_y = ${y}\n      WHERE id = ${id}\n    `;\n    \n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error updating position:', error);\n    return NextResponse.json({ success: false, error: error.message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,0LAAG,CAAC;;;;;IAK3B,CAAC;QAED,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAK;IACvD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnF;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE5D,MAAM,YAAY,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;QACxD,MAAM,YAAY,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;QAExD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,0LAAG,CAAC;;cAEjB,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,SAAS,aAAa,EAAE,EAAE,UAAU,EAAE,EAAE,UAAU;;IAEtF,CAAC;QAED,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM,IAAI,CAAC,EAAE;QAAC;IAC1D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnF;AACF;AAEO,eAAe,OAAO,OAAgB;IAC3C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;QAE5B,IAAI,CAAC,IAAI;YACP,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtF;QAEA,MAAM,0LAAG,CAAC,sCAAsC,EAAE,SAAS,IAAI,CAAC;QAEhE,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnF;AACF;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEvC,MAAM,0LAAG,CAAC;;uBAES,EAAE,EAAE,eAAe,EAAE,EAAE;iBAC7B,EAAE,GAAG;IAClB,CAAC;QAED,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnF;AACF","debugId":null}}]
}